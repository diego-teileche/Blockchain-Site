---
import Card from "@components/Card"
import CutCornerButton from "@components/CutCornerButton"
import Hexagon from "@components/Hexagon"
import Tag from "@components/Tag"
import DefaultLayout from "@layouts/Default.astro"
import Header from "@sections/Header"
import { getPostColorFromCategory } from "@utils/postUtils"
import { getCollection } from "astro:content"
import { twMerge } from "tailwind-merge"
import { motion } from "framer-motion"

const posts = (await getCollection("blog")).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
)

const latestPost = posts[0]
---

<DefaultLayout
	title="Blockforge"
	description="Blockforge - This is a super modern Blockchain Site built by Diego Tech by using Astro.js"
>
	<Header client:load />

	<section class="relative overflow-x-clip py-60">
		<div class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
			<Hexagon size={800} duration={30} client:load />
		</div>
		<div class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
			<Hexagon size={1200} duration={50} reverse client:load />
		</div>

		<div class="container">
			<div class="mx-auto max-w-3xl">
				<p
					class="text-center font-extrabold uppercase tracking-wider text-zinc-500"
				>
					Latest Post
				</p>
				<h1 class="mt-4 text-center font-heading text-7xl font-black">
					{latestPost.data.title}
				</h1>
				<p class="mx-auto mt-6 max-w-xl text-center text-2xl text-zinc-400">
					{latestPost.data.description}
				</p>
				<div class="mt-10 flex justify-center">
					<a href={`/blog/${latestPost.slug}`}>
						<CutCornerButton>Read More</CutCornerButton>
					</a>
				</div>
			</div>
		</div>
	</section>

	<section class="pb-[1000px]">
		<div class="container">
			<div class="grid grid-cols-2 gap-8">
				<div class="flex flex-col gap-12">
					{
						posts.map(
							({ data: { category, title, description }, slug }, postIndex) => (
								<motion.a
									href={`/blog/${slug}`}
									initial={{ opacity: 0, y: 20 }}
									whileInView={{ opacity: 1, y: 0 }}
									viewport={{ once: true, amount: 0.5 }}
									transition={{
										duration: 0.5,
										ease: "easeIn",
									}}
									className={twMerge(postIndex % 2 === 0 ? "" : "hidden")}
									client:load
								>
									<Card
										buttonText="Read More"
										color={getPostColorFromCategory(category)}
									>
										<Tag color={getPostColorFromCategory(category)}>
											{category}
										</Tag>
										<h2 class="mt-4 font-heading text-3xl font-black">
											{title}
										</h2>
										<p class="mt-6 text-lg text-zinc-400">{description}</p>
									</Card>
								</motion.a>
							)
						)
					}
				</div>

				<div class="mt-24 flex flex-col gap-12">
					{
						posts.map(
							({ data: { category, title, description }, slug }, postIndex) => (
								<motion.a
									href={`/blog/${slug}`}
									initial={{ opacity: 0, y: 20 }}
									whileInView={{ opacity: 1, y: 0 }}
									viewport={{ once: true, amount: 0.5 }}
									transition={{
										duration: 0.5,
										ease: "easeIn",
									}}
									className={twMerge(postIndex % 2 === 0 ? "hidden" : "")}
									client:load
								>
									<Card
										buttonText="Read More"
										color={getPostColorFromCategory(category)}
									>
										<Tag color={getPostColorFromCategory(category)}>
											{category}
										</Tag>
										<h2 class="mt-4 font-heading text-3xl font-black">
											{title}
										</h2>
										<p class="mt-6 text-lg text-zinc-400">{description}</p>
									</Card>
								</motion.a>
							)
						)
					}
				</div>
			</div>
		</div>
	</section>
</DefaultLayout>
